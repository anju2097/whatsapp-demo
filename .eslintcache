[{"D:\\Projects\\whats-app-clone\\whatsapp-clone\\src\\index.js":"1","D:\\Projects\\whats-app-clone\\whatsapp-clone\\src\\App.js":"2","D:\\Projects\\whats-app-clone\\whatsapp-clone\\src\\reportWebVitals.js":"3","D:\\Projects\\whats-app-clone\\whatsapp-clone\\src\\Sidebar.js":"4","D:\\Projects\\whats-app-clone\\whatsapp-clone\\src\\SidebarChat.js":"5","D:\\Projects\\whats-app-clone\\whatsapp-clone\\src\\Chat.js":"6","D:\\Projects\\whats-app-clone\\whatsapp-clone\\src\\firebase.js":"7","D:\\Projects\\whats-app-clone\\whatsapp-clone\\src\\Login.js":"8","D:\\Projects\\whats-app-clone\\whatsapp-clone\\src\\StateProvider.js":"9","D:\\Projects\\whats-app-clone\\whatsapp-clone\\src\\reducer.js":"10"},{"size":682,"mtime":1610961196430,"results":"11","hashOfConfig":"12"},{"size":859,"mtime":1610964132502,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":2198,"mtime":1610964517508,"results":"15","hashOfConfig":"12"},{"size":1537,"mtime":1610970073759,"results":"16","hashOfConfig":"12"},{"size":3653,"mtime":1610971799933,"results":"17","hashOfConfig":"12"},{"size":716,"mtime":1610940467872,"results":"18","hashOfConfig":"12"},{"size":1064,"mtime":1610966436578,"results":"19","hashOfConfig":"12"},{"size":375,"mtime":1610960833501,"results":"20","hashOfConfig":"12"},{"size":401,"mtime":1610968503864,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hhtnot",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\whats-app-clone\\whatsapp-clone\\src\\index.js",[],"D:\\Projects\\whats-app-clone\\whatsapp-clone\\src\\App.js",[],"D:\\Projects\\whats-app-clone\\whatsapp-clone\\src\\reportWebVitals.js",[],["44","45"],"D:\\Projects\\whats-app-clone\\whatsapp-clone\\src\\Sidebar.js",[],"D:\\Projects\\whats-app-clone\\whatsapp-clone\\src\\SidebarChat.js",[],"D:\\Projects\\whats-app-clone\\whatsapp-clone\\src\\Chat.js",["46"],"import React, {useState,useEffect} from 'react';\r\nimport {Avatar, IconButton} from '@material-ui/core';\r\nimport {AttachFile, MoreVert, SearchOutlined} from '@material-ui/icons';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport './Chat.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport db from './firebase';\r\nimport firebase from 'firebase';\r\nimport {useStateValue} from \"./StateProvider\";\r\n\r\nfunction Chat() {\r\n    const [input, setInput] = useState(\"\");\r\n    const [seed, setSeed] = useState(\"\");\r\n    const {roomId} = useParams();\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [{user}] = useStateValue();\r\n\r\n    useEffect(()=>{\r\n        if(roomId){\r\n            db.collection('rooms').doc(roomId).onSnapshot(snapshot => {\r\n                setRoomName(snapshot.data().name);\r\n            });\r\n\r\n            db.collection('rooms').doc(roomId).collection(\"messages\").orderBy(\"timestamp\",\"asc\").onSnapshot(snapshot => {\r\n                setMessages(snapshot.docs.map(doc => doc.data()))\r\n            });\r\n\r\n        }\r\n    },[roomId])\r\n\r\n    useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));        \r\n    }, [roomId]);\r\n\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        db.collection('rooms').doc(roomId).collection('messages').add({\r\n            message: input,\r\n            name: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n\r\n        setInput(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className='chat'>\r\n            <div className='chat__header'>\r\n                <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`}/>\r\n                <div className='chat__headerInfo'>\r\n                    <h3 className='chat-room-name'>{roomName}</h3>\r\n                    <p className='chat-room-last-seen'>\r\n                        Last seen {\" \"}\r\n                        {new Date(\r\n                            messages[messages.length - 1]?.\r\n                            timestamp?.toDate()\r\n                        ).toUTCString()}\r\n                    </p>\r\n                </div>\r\n                <div className=\"chat__headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert/>\r\n                    </IconButton>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className='chat__body'>\r\n                {messages.map(message => (\r\n                    <p className={`chat__message ${ message.name === user.displayName && 'chat__receiver'}`}>\r\n                        <span className=\"chat__name\">{message.name}</span>\r\n                        {message.message}\r\n                        <span className=\"chat__timestamp\">{new Date(message.timestamp?.toDate()).toUTCString()}</span>\r\n                    </p>\r\n                ))}\r\n            </div>\r\n            <div className='chat__footer'>\r\n                <InsertEmoticonIcon />\r\n                <form>\r\n                    <input value={input} onChange={(e) => setInput(e.target.value)} type=\"text\" placeholder=\"Type a message\"/>\r\n                    <button type=\"submit\" onClick={sendMessage}> Send a Message</button>\r\n                </form>\r\n                <MicIcon/>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat","D:\\Projects\\whats-app-clone\\whatsapp-clone\\src\\firebase.js",[],"D:\\Projects\\whats-app-clone\\whatsapp-clone\\src\\Login.js",["47"],"D:\\Projects\\whats-app-clone\\whatsapp-clone\\src\\StateProvider.js",[],"D:\\Projects\\whats-app-clone\\whatsapp-clone\\src\\reducer.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":57,"column":58,"nodeType":"54","messageId":"55","endLine":57,"endColumn":60,"fix":"56"},{"ruleId":"57","severity":1,"message":"58","line":9,"column":12,"nodeType":"59","messageId":"60","endLine":9,"endColumn":14},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"63","text":"64"},"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation",[2100,2132],"\r\n                            ?."]